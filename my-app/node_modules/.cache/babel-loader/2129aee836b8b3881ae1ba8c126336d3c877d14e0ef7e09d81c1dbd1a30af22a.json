{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\www\\\\time-tracking-dashboard-main\\\\Time-tracking-app-React\\\\my-app\\\\src\\\\Component.js\";\nimport React from 'react';\nimport dots from './images/ellipsis.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Component = props => {\n  const {\n    activity,\n    image,\n    className,\n    dailyValue,\n    weeklyValue,\n    monthlyValue,\n    activeButton\n  } = props;\n  const getTimeValue = () => {\n    if (activeButton === 'daily') {\n      return dailyValue !== 0 ? `${dailyValue}Hrs` : '0Hrs';\n    } else if (activeButton === 'weekly') {\n      return weeklyValue !== 0 ? `${weeklyValue}Hrs` : '0 Hrs';\n    } else if (activeButton === 'monthly') {\n      return monthlyValue !== 0 ? `${monthlyValue}Hrs` : '0 Hrs';\n    }\n    return '0 Hrs'; // Default to '0 Hrs' if activeButton is not recognized\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activity-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: activity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-title-p\",\n            children: activity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"three-dot-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: dots,\n              alt: \"Three dots\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"current-time current-time-work\",\n            children: getTimeValue()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Component;\nexport default Component;\nvar _c;\n$RefreshReg$(_c, \"Component\");","map":{"version":3,"names":["React","dots","jsxDEV","_jsxDEV","Fragment","_Fragment","Component","props","activity","image","className","dailyValue","weeklyValue","monthlyValue","activeButton","getTimeValue","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/www/time-tracking-dashboard-main/Time-tracking-app-React/my-app/src/Component.js"],"sourcesContent":["import React from 'react';\r\nimport dots from './images/ellipsis.svg';\r\n\r\nconst Component = (props) => {\r\n  const { \r\n    activity, image, className, \r\n    dailyValue, weeklyValue, monthlyValue, \r\n    activeButton \r\n  } = props;\r\n\r\n  const getTimeValue = () => {\r\n    if (activeButton === 'daily') {\r\n      return dailyValue !== 0 ? `${dailyValue}Hrs` : '0Hrs';\r\n    } else if (activeButton === 'weekly') {\r\n      return weeklyValue !== 0 ? `${weeklyValue}Hrs` : '0 Hrs';\r\n    } else if (activeButton === 'monthly') {\r\n      return monthlyValue !== 0 ? `${monthlyValue}Hrs` : '0 Hrs';\r\n    }\r\n    return '0 Hrs'; // Default to '0 Hrs' if activeButton is not recognized\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"activity-card\">\r\n        {/* coloured side of card */}\r\n        <div className={className}>\r\n          <img src={image} alt={activity} />\r\n        </div>\r\n        {/* info in the card */}\r\n        <div className=\"data-card\">\r\n          <div className=\"card-title\">\r\n            <p className=\"card-title-p\">{activity}</p>\r\n            <button className=\"three-dot-btn\">\r\n              <img src={dots} alt=\"Three dots\" />\r\n            </button>\r\n          </div>\r\n          {/* time div */}\r\n          <div className=\"card-info\">\r\n            <p className=\"current-time current-time-work\">{getTimeValue()}</p>\r\n          </div>\r\n          {/* info after clicking on the three-dot button */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Component;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAC3B,MAAM;IACJC,QAAQ;IAAEC,KAAK;IAAEC,SAAS;IAC1BC,UAAU;IAAEC,WAAW;IAAEC,YAAY;IACrCC;EACF,CAAC,GAAGP,KAAK;EAET,MAAMQ,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAID,YAAY,KAAK,OAAO,EAAE;MAC5B,OAAOH,UAAU,KAAK,CAAC,GAAI,GAAEA,UAAW,KAAI,GAAG,MAAM;IACvD,CAAC,MAAM,IAAIG,YAAY,KAAK,QAAQ,EAAE;MACpC,OAAOF,WAAW,KAAK,CAAC,GAAI,GAAEA,WAAY,KAAI,GAAG,OAAO;IAC1D,CAAC,MAAM,IAAIE,YAAY,KAAK,SAAS,EAAE;MACrC,OAAOD,YAAY,KAAK,CAAC,GAAI,GAAEA,YAAa,KAAI,GAAG,OAAO;IAC5D;IACA,OAAO,OAAO,CAAC,CAAC;EAClB,CAAC;;EAED,oBACEV,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACEb,OAAA;MAAKO,SAAS,EAAC,eAAe;MAAAM,QAAA,gBAE5Bb,OAAA;QAAKO,SAAS,EAAEA,SAAU;QAAAM,QAAA,eACxBb,OAAA;UAAKc,GAAG,EAAER,KAAM;UAACS,GAAG,EAAEV;QAAS;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eAENnB,OAAA;QAAKO,SAAS,EAAC,WAAW;QAAAM,QAAA,gBACxBb,OAAA;UAAKO,SAAS,EAAC,YAAY;UAAAM,QAAA,gBACzBb,OAAA;YAAGO,SAAS,EAAC,cAAc;YAAAM,QAAA,EAAER;UAAQ;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1CnB,OAAA;YAAQO,SAAS,EAAC,eAAe;YAAAM,QAAA,eAC/Bb,OAAA;cAAKc,GAAG,EAAEhB,IAAK;cAACiB,GAAG,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENnB,OAAA;UAAKO,SAAS,EAAC,WAAW;UAAAM,QAAA,eACxBb,OAAA;YAAGO,SAAS,EAAC,gCAAgC;YAAAM,QAAA,EAAED,YAAY,CAAC;UAAC;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP,CAAC;AAACC,EAAA,GA1CIjB,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}